
ElevatorProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000284  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000002f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00800060  00800060  000002f8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002f8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000328  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00000364  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b6e  00000000  00000000  000003e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007d0  00000000  00000000  00000f52  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000474  00000000  00000000  00001722  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000178  00000000  00000000  00001b98  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000682  00000000  00000000  00001d10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000050c  00000000  00000000  00002392  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  0000289e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 33 00 	jmp	0x66	; 0x66 <__ctors_end>
   4:	0c 94 bc 00 	jmp	0x178	; 0x178 <__vector_1>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	e0 00       	.word	0x00e0	; ????
  56:	e5 00       	.word	0x00e5	; ????
  58:	ea 00       	.word	0x00ea	; ????
  5a:	ef 00       	.word	0x00ef	; ????
  5c:	e0 00       	.word	0x00e0	; ????
  5e:	e5 00       	.word	0x00e5	; ????
  60:	ea 00       	.word	0x00ea	; ????
  62:	ef 00       	.word	0x00ef	; ????

00000064 <__ctors_start>:
  64:	31 01       	movw	r6, r2

00000066 <__ctors_end>:
  66:	11 24       	eor	r1, r1
  68:	1f be       	out	0x3f, r1	; 63
  6a:	cf e5       	ldi	r28, 0x5F	; 95
  6c:	d8 e0       	ldi	r29, 0x08	; 8
  6e:	de bf       	out	0x3e, r29	; 62
  70:	cd bf       	out	0x3d, r28	; 61

00000072 <__do_copy_data>:
  72:	10 e0       	ldi	r17, 0x00	; 0
  74:	a0 e6       	ldi	r26, 0x60	; 96
  76:	b0 e0       	ldi	r27, 0x00	; 0
  78:	e4 e8       	ldi	r30, 0x84	; 132
  7a:	f2 e0       	ldi	r31, 0x02	; 2
  7c:	02 c0       	rjmp	.+4      	; 0x82 <__do_copy_data+0x10>
  7e:	05 90       	lpm	r0, Z+
  80:	0d 92       	st	X+, r0
  82:	a0 36       	cpi	r26, 0x60	; 96
  84:	b1 07       	cpc	r27, r17
  86:	d9 f7       	brne	.-10     	; 0x7e <__do_copy_data+0xc>

00000088 <__do_clear_bss>:
  88:	20 e0       	ldi	r18, 0x00	; 0
  8a:	a0 e6       	ldi	r26, 0x60	; 96
  8c:	b0 e0       	ldi	r27, 0x00	; 0
  8e:	01 c0       	rjmp	.+2      	; 0x92 <.do_clear_bss_start>

00000090 <.do_clear_bss_loop>:
  90:	1d 92       	st	X+, r1

00000092 <.do_clear_bss_start>:
  92:	a8 36       	cpi	r26, 0x68	; 104
  94:	b2 07       	cpc	r27, r18
  96:	e1 f7       	brne	.-8      	; 0x90 <.do_clear_bss_loop>

00000098 <__do_global_ctors>:
  98:	10 e0       	ldi	r17, 0x00	; 0
  9a:	c3 e3       	ldi	r28, 0x33	; 51
  9c:	d0 e0       	ldi	r29, 0x00	; 0
  9e:	04 c0       	rjmp	.+8      	; 0xa8 <__do_global_ctors+0x10>
  a0:	21 97       	sbiw	r28, 0x01	; 1
  a2:	fe 01       	movw	r30, r28
  a4:	0e 94 3a 01 	call	0x274	; 0x274 <__tablejump2__>
  a8:	c2 33       	cpi	r28, 0x32	; 50
  aa:	d1 07       	cpc	r29, r17
  ac:	c9 f7       	brne	.-14     	; 0xa0 <__do_global_ctors+0x8>
  ae:	0e 94 17 01 	call	0x22e	; 0x22e <main>
  b2:	0c 94 40 01 	jmp	0x280	; 0x280 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <_Z21set_request_for_floori>:
void close_the_door(){

	//anti_clock_wise
	DOOR_MOTOR_PORT |= (1 << DOOR_MOTOR_IN2) | (1 << DOOR_MOTOR_EN); //enables the motor and specifies the direction of rotation
	_delay_ms(TIME_TO_CLOSE_THE_DOOR);
	DOOR_MOTOR_PORT &= (0 << DOOR_MOTOR_EN); //disables the motor
  ba:	e0 e6       	ldi	r30, 0x60	; 96
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	80 5a       	subi	r24, 0xA0	; 160
  c0:	9f 4f       	sbci	r25, 0xFF	; 255
  c2:	21 e0       	ldi	r18, 0x01	; 1
  c4:	dc 01       	movw	r26, r24
  c6:	12 96       	adiw	r26, 0x02	; 2
  c8:	2c 93       	st	X, r18
  ca:	80 81       	ld	r24, Z
  cc:	91 81       	ldd	r25, Z+1	; 0x01
  ce:	01 96       	adiw	r24, 0x01	; 1
  d0:	91 83       	std	Z+1, r25	; 0x01
  d2:	80 83       	st	Z, r24
  d4:	08 95       	ret

000000d6 <_Z29get_nearest_available_requesti>:
  d6:	ef 92       	push	r14
  d8:	ff 92       	push	r15
  da:	0f 93       	push	r16
  dc:	1f 93       	push	r17
  de:	cf 93       	push	r28
  e0:	df 93       	push	r29
  e2:	00 91 60 00 	lds	r16, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  e6:	10 91 61 00 	lds	r17, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  ea:	10 16       	cp	r1, r16
  ec:	11 06       	cpc	r1, r17
  ee:	dc f5       	brge	.+118    	; 0x166 <_Z29get_nearest_available_requesti+0x90>
  f0:	9c 01       	movw	r18, r24
  f2:	fc 01       	movw	r30, r24
  f4:	e0 5a       	subi	r30, 0xA0	; 160
  f6:	ff 4f       	sbci	r31, 0xFF	; 255
  f8:	ec 01       	movw	r28, r24
  fa:	24 97       	sbiw	r28, 0x04	; 4
  fc:	df 01       	movw	r26, r30
  fe:	79 01       	movw	r14, r18
 100:	ac 01       	movw	r20, r24
 102:	33 23       	and	r19, r19
 104:	94 f0       	brlt	.+36     	; 0x12a <_Z29get_nearest_available_requesti+0x54>
 106:	12 96       	adiw	r26, 0x02	; 2
 108:	6c 91       	ld	r22, X
 10a:	12 97       	sbiw	r26, 0x02	; 2
 10c:	66 23       	and	r22, r22
 10e:	69 f0       	breq	.+26     	; 0x12a <_Z29get_nearest_available_requesti+0x54>
 110:	01 50       	subi	r16, 0x01	; 1
 112:	11 09       	sbc	r17, r1
 114:	10 93 61 00 	sts	0x0061, r17	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 118:	00 93 60 00 	sts	0x0060, r16	; 0x800060 <__DATA_REGION_ORIGIN__>
 11c:	f9 01       	movw	r30, r18
 11e:	e0 5a       	subi	r30, 0xA0	; 160
 120:	ff 4f       	sbci	r31, 0xFF	; 255
 122:	12 82       	std	Z+2, r1	; 0x02
 124:	82 2f       	mov	r24, r18
 126:	9f 2d       	mov	r25, r15
 128:	20 c0       	rjmp	.+64     	; 0x16a <_Z29get_nearest_available_requesti+0x94>
 12a:	44 30       	cpi	r20, 0x04	; 4
 12c:	51 05       	cpc	r21, r1
 12e:	84 f4       	brge	.+32     	; 0x150 <_Z29get_nearest_available_requesti+0x7a>
 130:	62 81       	ldd	r22, Z+2	; 0x02
 132:	66 23       	and	r22, r22
 134:	69 f0       	breq	.+26     	; 0x150 <_Z29get_nearest_available_requesti+0x7a>
 136:	01 50       	subi	r16, 0x01	; 1
 138:	11 09       	sbc	r17, r1
 13a:	10 93 61 00 	sts	0x0061, r17	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 13e:	00 93 60 00 	sts	0x0060, r16	; 0x800060 <__DATA_REGION_ORIGIN__>
 142:	fa 01       	movw	r30, r20
 144:	e0 5a       	subi	r30, 0xA0	; 160
 146:	ff 4f       	sbci	r31, 0xFF	; 255
 148:	12 82       	std	Z+2, r1	; 0x02
 14a:	84 2f       	mov	r24, r20
 14c:	95 2f       	mov	r25, r21
 14e:	0d c0       	rjmp	.+26     	; 0x16a <_Z29get_nearest_available_requesti+0x94>
 150:	21 50       	subi	r18, 0x01	; 1
 152:	31 09       	sbc	r19, r1
 154:	01 96       	adiw	r24, 0x01	; 1
 156:	31 96       	adiw	r30, 0x01	; 1
 158:	11 97       	sbiw	r26, 0x01	; 1
 15a:	2c 17       	cp	r18, r28
 15c:	3d 07       	cpc	r19, r29
 15e:	79 f6       	brne	.-98     	; 0xfe <_Z29get_nearest_available_requesti+0x28>
 160:	8a e0       	ldi	r24, 0x0A	; 10
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	02 c0       	rjmp	.+4      	; 0x16a <_Z29get_nearest_available_requesti+0x94>
 166:	89 e0       	ldi	r24, 0x09	; 9
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	df 91       	pop	r29
 16c:	cf 91       	pop	r28
 16e:	1f 91       	pop	r17
 170:	0f 91       	pop	r16
 172:	ff 90       	pop	r15
 174:	ef 90       	pop	r14
 176:	08 95       	ret

00000178 <__vector_1>:
 178:	1f 92       	push	r1
 17a:	0f 92       	push	r0
 17c:	0f b6       	in	r0, 0x3f	; 63
 17e:	0f 92       	push	r0
 180:	11 24       	eor	r1, r1
 182:	2f 93       	push	r18
 184:	3f 93       	push	r19
 186:	4f 93       	push	r20
 188:	5f 93       	push	r21
 18a:	6f 93       	push	r22
 18c:	7f 93       	push	r23
 18e:	8f 93       	push	r24
 190:	9f 93       	push	r25
 192:	af 93       	push	r26
 194:	bf 93       	push	r27
 196:	ef 93       	push	r30
 198:	ff 93       	push	r31
 19a:	cf 93       	push	r28
 19c:	df 93       	push	r29
 19e:	1f 92       	push	r1
 1a0:	cd b7       	in	r28, 0x3d	; 61
 1a2:	de b7       	in	r29, 0x3e	; 62
 1a4:	89 b3       	in	r24, 0x19	; 25
 1a6:	8f 70       	andi	r24, 0x0F	; 15
 1a8:	89 83       	std	Y+1, r24	; 0x01
 1aa:	e9 81       	ldd	r30, Y+1	; 0x01
 1ac:	8e 2f       	mov	r24, r30
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	88 30       	cpi	r24, 0x08	; 8
 1b2:	91 05       	cpc	r25, r1
 1b4:	c0 f4       	brcc	.+48     	; 0x1e6 <__vector_1+0x6e>
 1b6:	fc 01       	movw	r30, r24
 1b8:	e6 5d       	subi	r30, 0xD6	; 214
 1ba:	ff 4f       	sbci	r31, 0xFF	; 255
 1bc:	0c 94 3a 01 	jmp	0x274	; 0x274 <__tablejump2__>
 1c0:	80 e0       	ldi	r24, 0x00	; 0
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	0e 94 5d 00 	call	0xba	; 0xba <_Z21set_request_for_floori>
 1c8:	0e c0       	rjmp	.+28     	; 0x1e6 <__vector_1+0x6e>
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	0e 94 5d 00 	call	0xba	; 0xba <_Z21set_request_for_floori>
 1d2:	09 c0       	rjmp	.+18     	; 0x1e6 <__vector_1+0x6e>
 1d4:	82 e0       	ldi	r24, 0x02	; 2
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	0e 94 5d 00 	call	0xba	; 0xba <_Z21set_request_for_floori>
 1dc:	04 c0       	rjmp	.+8      	; 0x1e6 <__vector_1+0x6e>
 1de:	83 e0       	ldi	r24, 0x03	; 3
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	0e 94 5d 00 	call	0xba	; 0xba <_Z21set_request_for_floori>
 1e6:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <current_floor>
 1ea:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <current_floor+0x1>
 1ee:	0e 94 6b 00 	call	0xd6	; 0xd6 <_Z29get_nearest_available_requesti>
 1f2:	0f 90       	pop	r0
 1f4:	df 91       	pop	r29
 1f6:	cf 91       	pop	r28
 1f8:	ff 91       	pop	r31
 1fa:	ef 91       	pop	r30
 1fc:	bf 91       	pop	r27
 1fe:	af 91       	pop	r26
 200:	9f 91       	pop	r25
 202:	8f 91       	pop	r24
 204:	7f 91       	pop	r23
 206:	6f 91       	pop	r22
 208:	5f 91       	pop	r21
 20a:	4f 91       	pop	r20
 20c:	3f 91       	pop	r19
 20e:	2f 91       	pop	r18
 210:	0f 90       	pop	r0
 212:	0f be       	out	0x3f, r0	; 63
 214:	0f 90       	pop	r0
 216:	1f 90       	pop	r1
 218:	18 95       	reti

0000021a <_Z8init_ddrv>:
 21a:	84 b3       	in	r24, 0x14	; 20
 21c:	8e 60       	ori	r24, 0x0E	; 14
 21e:	84 bb       	out	0x14, r24	; 20
 220:	84 b3       	in	r24, 0x14	; 20
 222:	80 67       	ori	r24, 0x70	; 112
 224:	84 bb       	out	0x14, r24	; 20
 226:	8a b3       	in	r24, 0x1a	; 26
 228:	84 7f       	andi	r24, 0xF4	; 244
 22a:	8a bb       	out	0x1a, r24	; 26
 22c:	08 95       	ret

0000022e <main>:
 22e:	0e 94 0d 01 	call	0x21a	; 0x21a <_Z8init_ddrv>
 232:	8f ef       	ldi	r24, 0xFF	; 255
 234:	87 bb       	out	0x17, r24	; 23
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <current_floor+0x1>
 23e:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <current_floor>
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	0e 94 5d 00 	call	0xba	; 0xba <_Z21set_request_for_floori>
 24a:	82 e0       	ldi	r24, 0x02	; 2
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	0e 94 5d 00 	call	0xba	; 0xba <_Z21set_request_for_floori>
 252:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <current_floor>
 256:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <current_floor+0x1>
 25a:	0e 94 6b 00 	call	0xd6	; 0xd6 <_Z29get_nearest_available_requesti>
 25e:	88 bb       	out	0x18, r24	; 24
 260:	f0 cf       	rjmp	.-32     	; 0x242 <main+0x14>

00000262 <_GLOBAL__sub_I_state>:
floor_t current_floor = 0;




struct request_holder{
 262:	e0 e6       	ldi	r30, 0x60	; 96
 264:	f0 e0       	ldi	r31, 0x00	; 0
 266:	11 82       	std	Z+1, r1	; 0x01
 268:	10 82       	st	Z, r1
 26a:	12 82       	std	Z+2, r1	; 0x02
 26c:	13 82       	std	Z+3, r1	; 0x03
 26e:	14 82       	std	Z+4, r1	; 0x04
 270:	15 82       	std	Z+5, r1	; 0x05
 272:	08 95       	ret

00000274 <__tablejump2__>:
 274:	ee 0f       	add	r30, r30
 276:	ff 1f       	adc	r31, r31
 278:	05 90       	lpm	r0, Z+
 27a:	f4 91       	lpm	r31, Z
 27c:	e0 2d       	mov	r30, r0
 27e:	09 94       	ijmp

00000280 <_exit>:
 280:	f8 94       	cli

00000282 <__stop_program>:
 282:	ff cf       	rjmp	.-2      	; 0x282 <__stop_program>
