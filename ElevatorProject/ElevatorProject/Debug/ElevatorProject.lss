
ElevatorProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000316  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  00000316  000003aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800064  00800064  000003ae  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003ae  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  0000041c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bb1  00000000  00000000  0000049c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007ca  00000000  00000000  0000104d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004ae  00000000  00000000  00001817  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000148  00000000  00000000  00001cc8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000687  00000000  00000000  00001e10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000061a  00000000  00000000  00002497  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00002ab1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 33 00 	jmp	0x66	; 0x66 <__ctors_end>
   4:	0c 94 25 01 	jmp	0x24a	; 0x24a <__vector_1>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	43 01       	movw	r8, r6
  56:	48 01       	movw	r8, r16
  58:	4d 01       	movw	r8, r26
  5a:	52 01       	movw	r10, r4
  5c:	43 01       	movw	r8, r6
  5e:	48 01       	movw	r8, r16
  60:	4d 01       	movw	r8, r26
  62:	52 01       	movw	r10, r4

00000064 <__ctors_start>:
  64:	78 01       	movw	r14, r16

00000066 <__ctors_end>:
  66:	11 24       	eor	r1, r1
  68:	1f be       	out	0x3f, r1	; 63
  6a:	cf e5       	ldi	r28, 0x5F	; 95
  6c:	d8 e0       	ldi	r29, 0x08	; 8
  6e:	de bf       	out	0x3e, r29	; 62
  70:	cd bf       	out	0x3d, r28	; 61

00000072 <__do_copy_data>:
  72:	10 e0       	ldi	r17, 0x00	; 0
  74:	a0 e6       	ldi	r26, 0x60	; 96
  76:	b0 e0       	ldi	r27, 0x00	; 0
  78:	e6 e1       	ldi	r30, 0x16	; 22
  7a:	f3 e0       	ldi	r31, 0x03	; 3
  7c:	02 c0       	rjmp	.+4      	; 0x82 <__do_copy_data+0x10>
  7e:	05 90       	lpm	r0, Z+
  80:	0d 92       	st	X+, r0
  82:	a4 36       	cpi	r26, 0x64	; 100
  84:	b1 07       	cpc	r27, r17
  86:	d9 f7       	brne	.-10     	; 0x7e <__do_copy_data+0xc>

00000088 <__do_clear_bss>:
  88:	20 e0       	ldi	r18, 0x00	; 0
  8a:	a4 e6       	ldi	r26, 0x64	; 100
  8c:	b0 e0       	ldi	r27, 0x00	; 0
  8e:	01 c0       	rjmp	.+2      	; 0x92 <.do_clear_bss_start>

00000090 <.do_clear_bss_loop>:
  90:	1d 92       	st	X+, r1

00000092 <.do_clear_bss_start>:
  92:	aa 36       	cpi	r26, 0x6A	; 106
  94:	b2 07       	cpc	r27, r18
  96:	e1 f7       	brne	.-8      	; 0x90 <.do_clear_bss_loop>

00000098 <__do_global_ctors>:
  98:	10 e0       	ldi	r17, 0x00	; 0
  9a:	c3 e3       	ldi	r28, 0x33	; 51
  9c:	d0 e0       	ldi	r29, 0x00	; 0
  9e:	04 c0       	rjmp	.+8      	; 0xa8 <__do_global_ctors+0x10>
  a0:	21 97       	sbiw	r28, 0x01	; 1
  a2:	fe 01       	movw	r30, r28
  a4:	0e 94 83 01 	call	0x306	; 0x306 <__tablejump2__>
  a8:	c2 33       	cpi	r28, 0x32	; 50
  aa:	d1 07       	cpc	r29, r17
  ac:	c9 f7       	brne	.-14     	; 0xa0 <__do_global_ctors+0x8>
  ae:	0e 94 be 00 	call	0x17c	; 0x17c <main>
  b2:	0c 94 89 01 	jmp	0x312	; 0x312 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <_Z21set_request_for_floori>:
void close_the_door(){

	//anti_clock_wise
	DOOR_MOTOR_PORT |= (1 << DOOR_MOTOR_IN2) | (1 << DOOR_MOTOR_EN); //enables the motor and specifies the direction of rotation
	_delay_ms(TIME_TO_CLOSE_THE_DOOR);
	DOOR_MOTOR_PORT &= (0 << DOOR_MOTOR_EN); //disables the motor
  ba:	e5 e6       	ldi	r30, 0x65	; 101
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	8b 59       	subi	r24, 0x9B	; 155
  c0:	9f 4f       	sbci	r25, 0xFF	; 255
  c2:	21 e0       	ldi	r18, 0x01	; 1
  c4:	dc 01       	movw	r26, r24
  c6:	11 96       	adiw	r26, 0x01	; 1
  c8:	2c 93       	st	X, r18
  ca:	80 81       	ld	r24, Z
  cc:	8f 5f       	subi	r24, 0xFF	; 255
  ce:	80 83       	st	Z, r24
  d0:	08 95       	ret

000000d2 <_Z26get_next_available_requesti>:
  d2:	a0 91 65 00 	lds	r26, 0x0065	; 0x800065 <request_holder>
  d6:	aa 23       	and	r26, r26
  d8:	09 f4       	brne	.+2      	; 0xdc <_Z26get_next_available_requesti+0xa>
  da:	41 c0       	rjmp	.+130    	; 0x15e <_Z26get_next_available_requesti+0x8c>
  dc:	84 30       	cpi	r24, 0x04	; 4
  de:	91 05       	cpc	r25, r1
  e0:	0c f0       	brlt	.+2      	; 0xe4 <_Z26get_next_available_requesti+0x12>
  e2:	46 c0       	rjmp	.+140    	; 0x170 <_Z26get_next_available_requesti+0x9e>
  e4:	9c 01       	movw	r18, r24
  e6:	2f 5f       	subi	r18, 0xFF	; 255
  e8:	3f 4f       	sbci	r19, 0xFF	; 255
  ea:	f9 01       	movw	r30, r18
  ec:	eb 59       	subi	r30, 0x9B	; 155
  ee:	ff 4f       	sbci	r31, 0xFF	; 255
  f0:	60 e0       	ldi	r22, 0x00	; 0
  f2:	70 e0       	ldi	r23, 0x00	; 0
  f4:	40 e0       	ldi	r20, 0x00	; 0
  f6:	51 91       	ld	r21, Z+
  f8:	51 11       	cpse	r21, r1
  fa:	4f 5f       	subi	r20, 0xFF	; 255
  fc:	61 15       	cp	r22, r1
  fe:	71 05       	cpc	r23, r1
 100:	09 f4       	brne	.+2      	; 0x104 <_Z26get_next_available_requesti+0x32>
 102:	b9 01       	movw	r22, r18
 104:	2f 5f       	subi	r18, 0xFF	; 255
 106:	3f 4f       	sbci	r19, 0xFF	; 255
 108:	25 30       	cpi	r18, 0x05	; 5
 10a:	31 05       	cpc	r19, r1
 10c:	a1 f7       	brne	.-24     	; 0xf6 <_Z26get_next_available_requesti+0x24>
 10e:	02 97       	sbiw	r24, 0x02	; 2
 110:	8a f0       	brmi	.+34     	; 0x134 <_Z26get_next_available_requesti+0x62>
 112:	fc 01       	movw	r30, r24
 114:	e9 59       	subi	r30, 0x99	; 153
 116:	ff 4f       	sbci	r31, 0xFF	; 255
 118:	20 e0       	ldi	r18, 0x00	; 0
 11a:	30 e0       	ldi	r19, 0x00	; 0
 11c:	52 91       	ld	r21, -Z
 11e:	51 11       	cpse	r21, r1
 120:	4f 5f       	subi	r20, 0xFF	; 255
 122:	21 15       	cp	r18, r1
 124:	31 05       	cpc	r19, r1
 126:	19 f4       	brne	.+6      	; 0x12e <_Z26get_next_available_requesti+0x5c>
 128:	9c 01       	movw	r18, r24
 12a:	2f 5f       	subi	r18, 0xFF	; 255
 12c:	3f 4f       	sbci	r19, 0xFF	; 255
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	aa f7       	brpl	.-22     	; 0x11c <_Z26get_next_available_requesti+0x4a>
 132:	02 c0       	rjmp	.+4      	; 0x138 <_Z26get_next_available_requesti+0x66>
 134:	20 e0       	ldi	r18, 0x00	; 0
 136:	30 e0       	ldi	r19, 0x00	; 0
 138:	a1 50       	subi	r26, 0x01	; 1
 13a:	a0 93 65 00 	sts	0x0065, r26	; 0x800065 <request_holder>
 13e:	44 23       	and	r20, r20
 140:	39 f0       	breq	.+14     	; 0x150 <_Z26get_next_available_requesti+0x7e>
 142:	fb 01       	movw	r30, r22
 144:	eb 59       	subi	r30, 0x9B	; 155
 146:	ff 4f       	sbci	r31, 0xFF	; 255
 148:	11 82       	std	Z+1, r1	; 0x01
 14a:	86 2f       	mov	r24, r22
 14c:	97 2f       	mov	r25, r23
 14e:	08 95       	ret
 150:	f9 01       	movw	r30, r18
 152:	eb 59       	subi	r30, 0x9B	; 155
 154:	ff 4f       	sbci	r31, 0xFF	; 255
 156:	11 82       	std	Z+1, r1	; 0x01
 158:	82 2f       	mov	r24, r18
 15a:	93 2f       	mov	r25, r19
 15c:	08 95       	ret
 15e:	8f ef       	ldi	r24, 0xFF	; 255
 160:	9f ef       	ldi	r25, 0xFF	; 255
 162:	08 95       	ret
 164:	a1 50       	subi	r26, 0x01	; 1
 166:	a0 93 65 00 	sts	0x0065, r26	; 0x800065 <request_holder>
 16a:	20 e0       	ldi	r18, 0x00	; 0
 16c:	30 e0       	ldi	r19, 0x00	; 0
 16e:	f0 cf       	rjmp	.-32     	; 0x150 <_Z26get_next_available_requesti+0x7e>
 170:	02 97       	sbiw	r24, 0x02	; 2
 172:	c2 f3       	brmi	.-16     	; 0x164 <_Z26get_next_available_requesti+0x92>
 174:	60 e0       	ldi	r22, 0x00	; 0
 176:	70 e0       	ldi	r23, 0x00	; 0
 178:	40 e0       	ldi	r20, 0x00	; 0
 17a:	cb cf       	rjmp	.-106    	; 0x112 <_Z26get_next_available_requesti+0x40>

0000017c <main>:
 17c:	81 b3       	in	r24, 0x11	; 17
 17e:	81 bb       	out	0x11, r24	; 17
 180:	b8 9a       	sbi	0x17, 0	; 23
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 18a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 18e:	83 e0       	ldi	r24, 0x03	; 3
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	0e 94 5d 00 	call	0xba	; 0xba <_Z21set_request_for_floori>
 196:	82 e0       	ldi	r24, 0x02	; 2
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	0e 94 5d 00 	call	0xba	; 0xba <_Z21set_request_for_floori>
 19e:	84 e0       	ldi	r24, 0x04	; 4
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	0e 94 5d 00 	call	0xba	; 0xba <_Z21set_request_for_floori>
 1a6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 1aa:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 1ae:	0e 94 69 00 	call	0xd2	; 0xd2 <_Z26get_next_available_requesti>
 1b2:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 1b6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 1ba:	02 97       	sbiw	r24, 0x02	; 2
 1bc:	09 f4       	brne	.+2      	; 0x1c0 <main+0x44>
 1be:	c0 9a       	sbi	0x18, 0	; 24
 1c0:	8b b7       	in	r24, 0x3b	; 59
 1c2:	80 64       	ori	r24, 0x40	; 64
 1c4:	8b bf       	out	0x3b, r24	; 59
 1c6:	88 e0       	ldi	r24, 0x08	; 8
 1c8:	85 bf       	out	0x35, r24	; 53
 1ca:	78 94       	sei
 1cc:	88 b3       	in	r24, 0x18	; 24
 1ce:	88 bb       	out	0x18, r24	; 24
 1d0:	fd cf       	rjmp	.-6      	; 0x1cc <main+0x50>

000001d2 <_Z31rotate_lift_motor_for_one_floor9direction>:
 1d2:	81 11       	cpse	r24, r1
 1d4:	04 c0       	rjmp	.+8      	; 0x1de <_Z31rotate_lift_motor_for_one_floor9direction+0xc>
 1d6:	8b b3       	in	r24, 0x1b	; 27
 1d8:	8a 60       	ori	r24, 0x0A	; 10
 1da:	8b bb       	out	0x1b, r24	; 27
 1dc:	05 c0       	rjmp	.+10     	; 0x1e8 <_Z31rotate_lift_motor_for_one_floor9direction+0x16>
 1de:	81 30       	cpi	r24, 0x01	; 1
 1e0:	19 f4       	brne	.+6      	; 0x1e8 <_Z31rotate_lift_motor_for_one_floor9direction+0x16>
 1e2:	8b b3       	in	r24, 0x1b	; 27
 1e4:	8c 60       	ori	r24, 0x0C	; 12
 1e6:	8b bb       	out	0x1b, r24	; 27
 1e8:	2f e3       	ldi	r18, 0x3F	; 63
 1ea:	8d e0       	ldi	r24, 0x0D	; 13
 1ec:	93 e0       	ldi	r25, 0x03	; 3
 1ee:	21 50       	subi	r18, 0x01	; 1
 1f0:	80 40       	sbci	r24, 0x00	; 0
 1f2:	90 40       	sbci	r25, 0x00	; 0
 1f4:	e1 f7       	brne	.-8      	; 0x1ee <_Z31rotate_lift_motor_for_one_floor9direction+0x1c>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <_Z31rotate_lift_motor_for_one_floor9direction+0x26>
 1f8:	00 00       	nop
 1fa:	8b b3       	in	r24, 0x1b	; 27
 1fc:	1b ba       	out	0x1b, r1	; 27
 1fe:	08 95       	ret

00000200 <_Z18lift_motor_requestii>:
 200:	ff 92       	push	r15
 202:	0f 93       	push	r16
 204:	1f 93       	push	r17
 206:	cf 93       	push	r28
 208:	df 93       	push	r29
 20a:	86 1b       	sub	r24, r22
 20c:	97 0b       	sbc	r25, r23
 20e:	f9 2e       	mov	r15, r25
 210:	f0 94       	com	r15
 212:	ff 1c       	adc	r15, r15
 214:	ff 24       	eor	r15, r15
 216:	ff 1c       	adc	r15, r15
 218:	8c 01       	movw	r16, r24
 21a:	99 23       	and	r25, r25
 21c:	24 f4       	brge	.+8      	; 0x226 <_Z18lift_motor_requestii+0x26>
 21e:	00 27       	eor	r16, r16
 220:	11 27       	eor	r17, r17
 222:	08 1b       	sub	r16, r24
 224:	19 0b       	sbc	r17, r25
 226:	10 16       	cp	r1, r16
 228:	11 06       	cpc	r1, r17
 22a:	4c f4       	brge	.+18     	; 0x23e <_Z18lift_motor_requestii+0x3e>
 22c:	c0 e0       	ldi	r28, 0x00	; 0
 22e:	d0 e0       	ldi	r29, 0x00	; 0
 230:	8f 2d       	mov	r24, r15
 232:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <_Z31rotate_lift_motor_for_one_floor9direction>
 236:	21 96       	adiw	r28, 0x01	; 1
 238:	0c 17       	cp	r16, r28
 23a:	1d 07       	cpc	r17, r29
 23c:	c9 f7       	brne	.-14     	; 0x230 <_Z18lift_motor_requestii+0x30>
 23e:	df 91       	pop	r29
 240:	cf 91       	pop	r28
 242:	1f 91       	pop	r17
 244:	0f 91       	pop	r16
 246:	ff 90       	pop	r15
 248:	08 95       	ret

0000024a <__vector_1>:
 24a:	1f 92       	push	r1
 24c:	0f 92       	push	r0
 24e:	0f b6       	in	r0, 0x3f	; 63
 250:	0f 92       	push	r0
 252:	11 24       	eor	r1, r1
 254:	2f 93       	push	r18
 256:	3f 93       	push	r19
 258:	4f 93       	push	r20
 25a:	5f 93       	push	r21
 25c:	6f 93       	push	r22
 25e:	7f 93       	push	r23
 260:	8f 93       	push	r24
 262:	9f 93       	push	r25
 264:	af 93       	push	r26
 266:	bf 93       	push	r27
 268:	ef 93       	push	r30
 26a:	ff 93       	push	r31
 26c:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <__data_end>
 270:	8e 2f       	mov	r24, r30
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	fc 01       	movw	r30, r24
 276:	31 97       	sbiw	r30, 0x01	; 1
 278:	e8 30       	cpi	r30, 0x08	; 8
 27a:	f1 05       	cpc	r31, r1
 27c:	b8 f4       	brcc	.+46     	; 0x2ac <__vector_1+0x62>
 27e:	e6 5d       	subi	r30, 0xD6	; 214
 280:	ff 4f       	sbci	r31, 0xFF	; 255
 282:	0c 94 83 01 	jmp	0x306	; 0x306 <__tablejump2__>
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	0e 94 5d 00 	call	0xba	; 0xba <_Z21set_request_for_floori>
 28e:	0e c0       	rjmp	.+28     	; 0x2ac <__vector_1+0x62>
 290:	82 e0       	ldi	r24, 0x02	; 2
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	0e 94 5d 00 	call	0xba	; 0xba <_Z21set_request_for_floori>
 298:	09 c0       	rjmp	.+18     	; 0x2ac <__vector_1+0x62>
 29a:	83 e0       	ldi	r24, 0x03	; 3
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	0e 94 5d 00 	call	0xba	; 0xba <_Z21set_request_for_floori>
 2a2:	04 c0       	rjmp	.+8      	; 0x2ac <__vector_1+0x62>
 2a4:	84 e0       	ldi	r24, 0x04	; 4
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	0e 94 5d 00 	call	0xba	; 0xba <_Z21set_request_for_floori>
 2ac:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <state>
 2b0:	81 30       	cpi	r24, 0x01	; 1
 2b2:	69 f4       	brne	.+26     	; 0x2ce <__vector_1+0x84>
 2b4:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 2b8:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 2bc:	0e 94 69 00 	call	0xd2	; 0xd2 <_Z26get_next_available_requesti>
 2c0:	bc 01       	movw	r22, r24
 2c2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 2c6:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 2ca:	0e 94 00 01 	call	0x200	; 0x200 <_Z18lift_motor_requestii>
 2ce:	ff 91       	pop	r31
 2d0:	ef 91       	pop	r30
 2d2:	bf 91       	pop	r27
 2d4:	af 91       	pop	r26
 2d6:	9f 91       	pop	r25
 2d8:	8f 91       	pop	r24
 2da:	7f 91       	pop	r23
 2dc:	6f 91       	pop	r22
 2de:	5f 91       	pop	r21
 2e0:	4f 91       	pop	r20
 2e2:	3f 91       	pop	r19
 2e4:	2f 91       	pop	r18
 2e6:	0f 90       	pop	r0
 2e8:	0f be       	out	0x3f, r0	; 63
 2ea:	0f 90       	pop	r0
 2ec:	1f 90       	pop	r1
 2ee:	18 95       	reti

000002f0 <_GLOBAL__sub_I_state>:
floor_t current_floor = 1;




struct request_holder{
 2f0:	e5 e6       	ldi	r30, 0x65	; 101
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	10 82       	st	Z, r1
 2f6:	11 82       	std	Z+1, r1	; 0x01
 2f8:	12 82       	std	Z+2, r1	; 0x02
 2fa:	13 82       	std	Z+3, r1	; 0x03
 2fc:	14 82       	std	Z+4, r1	; 0x04
void open_the_door();
void close_the_door();



volatile uint8_t floor_request_code = PIND; 
 2fe:	80 b3       	in	r24, 0x10	; 16
 300:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__data_end>
 304:	08 95       	ret

00000306 <__tablejump2__>:
 306:	ee 0f       	add	r30, r30
 308:	ff 1f       	adc	r31, r31
 30a:	05 90       	lpm	r0, Z+
 30c:	f4 91       	lpm	r31, Z
 30e:	e0 2d       	mov	r30, r0
 310:	09 94       	ijmp

00000312 <_exit>:
 312:	f8 94       	cli

00000314 <__stop_program>:
 314:	ff cf       	rjmp	.-2      	; 0x314 <__stop_program>
